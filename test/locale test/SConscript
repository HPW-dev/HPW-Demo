#!/usr/bin/env python
Import([
  "env",
  "is_linux",
  "is_debug",
  "ld_flags",
  "cpp_flags",
  "compiler",
  "defines",
  "is_clang",
  "is_64bit",
])
ld_flags.extend(["-fopenmp"])
cpp_flags.extend(["-fopenmp"])
build_dir = "../../build/"
prog_name = "HPW"
src_dir = "../../src/"
thirdparty_dir = "../../thirdparty/"
inc_path = [
  ".",
  src_dir,
  thirdparty_dir + "include",
]
lib_path = [thirdparty_dir + "lib/yaml-cpp"]
used_libs = ["yaml-cpp"]
sources = [  
  Glob(thirdparty_dir + "include/zip/*.c"),
  Glob(src_dir + "util/file/yaml/yaml.cpp"),
  Glob(src_dir + "util/file/archive/archive.cpp"),
  Glob(src_dir + "util/path.cpp"),
  Glob(src_dir + "util/str-util.cpp"),
  Glob(src_dir + "util/file/file.cpp"),
  Glob(src_dir + "game/locale.cpp"),
  Glob(src_dir + "game/store.cpp"),
  Glob(src_dir + "hpw/global.cpp"),
  src_dir + "host/command.cpp",
  Glob("*.cpp"),
]

# билд теста графики
env.Append(CPPDEFINES = defines)
env.Append(CXXFLAGS = cpp_flags)
env.Program(
  target = build_dir + prog_name,
  source = sources,
  CXX = compiler,
  CXXFLAGS = cpp_flags,
  LIBPATH = lib_path,
  CPPPATH = inc_path,
  LINKFLAGS = ld_flags,
  LIBS = used_libs
) # env.Program
