#!/usr/bin/env python
Import([
  "env",
  "is_linux",
  "is_debug",
  "ld_flags",
  "cpp_flags",
  "defines",
  "is_64bit",
  "compiler",
])

build_dir = "../../build/"
prog_name = "HPW"
src_dir = "../../src/"
thirdparty_dir = "../../thirdparty/"
inc_path = [
  ".",
  src_dir,
  thirdparty_dir + "include",
]
lib_path = [
  thirdparty_dir + "lib/OpenAL-soft/" + ("x64" if is_64bit else "x32"),
]
used_libs = ["OpenAL32.dll"]
sources = [
  Glob(src_dir + "sound/*.cpp"),
  src_dir + "util/error.cpp",
  src_dir + "util/file/file.cpp",
  src_dir + "util/str-util.cpp",
  thirdparty_dir + "include/stb/stb_vorbis.c",
  Glob("*.cpp"),
]
inc_path.extend([thirdparty_dir + "include/_windows_only"])
defines.extend(["-DSOUND_WITHOUT_ENTITY"]);

env.Program(
  target = build_dir + prog_name,
  source = sources,
  CXXFLAGS = cpp_flags,
  CPPDEFINES = defines,
  LIBPATH = lib_path,
  CPPPATH = inc_path,
  LINKFLAGS = ld_flags,
  LIBS = used_libs,
  CXX = compiler
)
