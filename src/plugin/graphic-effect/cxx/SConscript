#!/usr/bin/env python
Import([
  "env",
  "is_debug",
  "ld_flags",
  "cpp_flags",
  "compiler",
  "defines",
  "is_64bit",
])

enable_omp = True
#enable_omp = False
if enable_omp:
  ld_flags.extend(["-fopenmp"])
  cpp_flags.extend(["-fopenmp"])
  
plugin_dir = "../../../build/plugin/effect/"
src_dir = "../../../"
src_plugin_dir = "../../../plugin/graphic-effect/cxx/"

inc_path = [
  ".",
  src_dir,
]

# билд плагинов
def build_plugin(target, source):
  env.SharedLibrary(
    target = plugin_dir + target,
    source = source,
    CXX = compiler,
    CPPDEFINES = defines,
    CXXFLAGS = cpp_flags,
    LINKFLAGS = ld_flags,
    CPPPATH = inc_path,
  )

build_plugin("brightness", [
  src_plugin_dir + "brightness.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
] )

build_plugin("motion-blur", [
  src_plugin_dir + "motion-blur.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/image.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
] )

build_plugin("epilepsy", [
  src_plugin_dir + "epilepsy.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
  src_dir + "util/math/random.cpp",
] )
