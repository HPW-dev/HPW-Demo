#!/usr/bin/env python
from script.helper import *
Import(["env"])
hpw_config = env['hpw_config']
  
plugin_dir = "../../../../build/plugin/effect/"
src_dir = "../../../"
src_plugin_dir = "../../../plugin/graphic-effect/cxx/"
inc_path = [
  ".",
  src_dir,
]

def build_plugin(target, source):
  '''билд плагинов'''
  env.SharedLibrary(
    target = plugin_dir + target,
    source = source,
    CPPDEFINES = hpw_config.cxx_defines,
    CXXFLAGS = hpw_config.cxx_flags,
    LINKFLAGS = hpw_config.cxx_ldflags,
    CPPPATH = inc_path,
  )

def init():
  match hpw_config.compiler:
    case Compiler.gcc: env['CXX'] = 'g++'
    case Compiler.clang: env['CXX'] = 'clang++'
    case _: raise ValueError

# main section
init()
build_plugin("brightness", [
  src_plugin_dir + "brightness.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
] )

build_plugin("motion-blur", [
  src_plugin_dir + "motion-blur.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/image.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
] )

build_plugin("epilepsy", [
  src_plugin_dir + "epilepsy.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
  src_dir + "util/math/random.cpp",
  src_dir + "util/hpw-util.cpp",
  src_dir + "util/error.cpp",
] )

build_plugin("blink-dither", [
  src_plugin_dir + "blink-dither.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
] )

build_plugin("pixelate", [
  src_plugin_dir + "pixelate.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
  src_dir + "util/error.cpp",
] )

build_plugin("sharpen", [
  src_plugin_dir + "sharpen.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
] )

build_plugin("random-frame", [
  src_plugin_dir + "random-frame.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
  src_dir + "util/math/random.cpp",
] )

build_plugin("fading", [
  src_plugin_dir + "fading.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
] )

build_plugin("symbols", [
  src_plugin_dir + "symbols.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
] )

build_plugin("posterize", [
  src_plugin_dir + "posterize.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
] )

build_plugin("autocontrast", [
  src_plugin_dir + "autocontrast.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
] )

''' TODO исправь эффект
build_plugin("block-swap", [
  src_plugin_dir + "block-swap.cpp",
  src_plugin_dir + "pge-util.cpp",
  src_dir + "graphic/image/color.cpp",
  src_dir + "graphic/util/convert.cpp",
  src_dir + "util/math/random.cpp",
] )'''
